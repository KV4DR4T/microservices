version: '3.1'

services:
  rabbitmq:
    container_name: 'rabbit'
    image: 'rabbitmq:latest'
    environment:
      - 'RABBITMQ_DEFAULT_PASS=guest'
      - 'RABBITMQ_DEFAULT_USER=guest'
    ports:
      - '5672:5672'
      - '15672:15672'

  postgres:
      image: postgres
      environment:
        - POSTGRES_USER=test
        - POSTGRES_PASSWORD=test
        - POSTGRES_DATASOURCE_URL=jdbc:postgresql://localhost:5432/test
        - POSTGRES_JPA_HIBERNATE_DDL_AUTO=update
        - POSTGRES_DB=test
      ports:
        - '5432:5432'

  service1:
    container_name: 'service1'
    build:
      context: ./service1
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
    environment:
        - 'SPRING_RABBITMQ_HOST=rabbit'
    ports:
      - "8081:8080"

  service2:
    container_name: 'service2'
    build:
      context: ./service2
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
    environment:
       - 'SPRING_RABBITMQ_HOST=rabbit'
    ports:
      - "8082:8080"

  service3:
    container_name: 'service3'
    build:
      context: ./service3
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
    environment:
      - 'SPRING_RABBITMQ_HOST=rabbit'
    ports:
      - "8083:8080"

  service4:
    container_name: 'service4'
    build:
      context: ./service4
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
    environment:
      - 'SPRING_RABBITMQ_HOST=rabbit'
    ports:
      - "8084:8080"

  service5:
    container_name: 'service5'
    build:
      context: ./service5
      dockerfile: Dockerfile
    depends_on:
        rabbitmq:
          condition: service_started
        postgres:
          condition: service_started
    environment:
      - 'SPRING_RABBITMQ_HOST=rabbit'
    ports:
      - "8085:8080"